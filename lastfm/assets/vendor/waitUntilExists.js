// Generated by CoffeeScript 1.3.3
(function() {

  (function() {
    var _waitUntilExists;
    _waitUntilExists = {
      pending_functions: [],
      loop_and_call: function() {
        var i, obj, resolution, _f, _results;
        if (!_waitUntilExists.pending_functions.length) {
          return;
        }
        i = 0;
        _results = [];
        while (i < _waitUntilExists.pending_functions.length) {
          obj = _waitUntilExists.pending_functions[i];
          resolution = document.getElementById(obj.id);
          if (obj.id === document) {
            resolution = document.body;
          }
          if (resolution) {
            _f = obj.f;
            _waitUntilExists.pending_functions.splice(i, 1);
            if (obj.c === "itself") {
              obj.c = resolution;
            }
            _f.call(obj.c);
            i--;
          }
          _results.push(i++);
        }
        return _results;
      },
      global_interval: setInterval(function() {
        return _waitUntilExists.loop_and_call();
      }, 5)
    };
    if (document.addEventListener) {
      document.addEventListener("DOMNodeInserted", _waitUntilExists.loop_and_call, false);
      clearInterval(_waitUntilExists.global_interval);
    }
    window.waitUntilExists = function(id, the_function, context) {
      context = context || window;
      if (typeof id === "function") {
        context = the_function;
        the_function = id;
        id = document;
      }
      return _waitUntilExists.pending_functions.push({
        f: the_function,
        id: id,
        c: context
      });
    };
    waitUntilExists.stop = function(id, f) {
      var i, _results;
      i = 0;
      _results = [];
      while (i < _waitUntilExists.pending_functions.length) {
        if (_waitUntilExists.pending_functions[i].id === id && (typeof f === "undefined" || _waitUntilExists.pending_functions[i].f === f)) {
          _waitUntilExists.pending_functions.splice(i, 1);
        }
        _results.push(i++);
      }
      return _results;
    };
    return waitUntilExists.stopAll = function() {
      return _waitUntilExists.pending_functions = [];
    };
  })();

}).call(this);
